#==============================================================================
#
# Makefile.htm.common
#
# ==============================================================================


ifndef ARCH
$(error ARCH not set)
endif

ifndef HANDLER
$(error HANDLER not set)
endif

$(info $$ARCH is [${ARCH}], $$HANDLER is [${HANDLER}, $$SUFFIX is ${SUFFIX}])

BINARY_FILENAME = $(PROG).$(ARCH)$(SUFFIX)

.PHONY: default
default: $(BINARY_FILENAME)

include ../common/Makefile.common

# ==============================================================================
# Variables
# ==============================================================================

CFLAGS   += -DHTM -fgnu-tm

ifeq ($(ARCH),riscv)
# M5 ops call type uses default interface (invalid inst)
CFLAGS   += -DCALL_TYPE_IS_DEFAULT
# Build RISCV binaries simulated in SE mode (no sched_affinity)
else
CFLAGS   += -DENABLE_PTHREAD_SET_AFFINITY
endif

CFLAGS   += -D_GNU_SOURCE

CPPFLAGS := $(CFLAGS)

LIBM5 := $(M5)/libm5.a
LIBABORTHANDLER := $(LIBABORTHANDLER_DIR)/build/$(ARCH)/libaborthandlers-$(HANDLER).a

LDFLAGS += -L$(LIBABORTHANDLER_DIR)/build/$(ARCH)
LDFLAGS += -L$(M5)

LIBS     += -laborthandlers-$(HANDLER) -lpthread -lm5

# ==============================================================================
# Rules
# ==============================================================================

.PHONY: clean
clean:
	-$(RM) $(OBJS) $(BINARY_FILENAME) $(OUTPUT)
	[ -e build/${ARCH} ] && rmdir --ignore-fail-on-non-empty build/${ARCH} || true
	[ -e build ] && rmdir --ignore-fail-on-non-empty build/ || true
	-$(MAKE) -C $(LIBABORTHANDLER_DIR) clean ARCH=$(ARCH) HANDLER=$(HANDLER)

.PHONY: clean_objs
clean_objs:
	$(RM) $(OBJS) $(OUTPUT)

$(BINARY_FILENAME): $(OBJS)  $(LIBM5) $(LIBABORTHANDLER) $(LIBM5)
	$(LD) $(LDFLAGS) $(OBJS) $(LIBS) -o $(BINARY_FILENAME)

$(LIBABORTHANDLER):
	$(MAKE) -C $(LIBABORTHANDLER_DIR) libaborthandlers ARCH=$(ARCH) HANDLER=$(HANDLER)

ifeq ($(ARCH),riscv)
M5_ARCH=riscv
else
ifeq ($(ARCH),aarch64)
M5_ARCH=arm64
else
ifeq ($(ARCH),x86_64)
M5_ARCH=x86
else
$(error M5_ARCH unknown)
endif
endif
endif

$(LIBM5):
	cd $(GEM5_ROOT)/util/m5 && scons $(M5_ARCH).CROSS_COMPILE=${GCC_PREFIX} build/$(M5_ARCH)/out/m5



# ==============================================================================
#
# End of Makefile.htm.common
#
# ==============================================================================
